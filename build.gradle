plugins {
    id 'fabric-loom' version '1.10-SNAPSHOT'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url "https://maven.meteordev.org/releases" }
    maven { url "https://maven.meteordev.org/snapshots" }
}

loom {
    accessWidenerPath = file("src/main/resources/onec-addon.accesswidener")
}

// Define custom configurations to match Meteor's setup
def modInclude = configurations.create("modInclude")
def library = configurations.create("library")

configurations {
    modImplementation {
        extendsFrom modInclude
    }
    include {
        extendsFrom modInclude
    }
    implementation {
        extendsFrom library
    }
}

dependencies {
    // Fabric
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"

    // Meteor
    modImplementation "meteordevelopment:meteor-client:${minecraft_version}-SNAPSHOT"

    // Libraries (non-mods)
    add("library", "meteordevelopment:starscript:${starscript_version}")
    add("library", "meteordevelopment:discord-ipc:${discordipc_version}")
}

processResources {
    inputs.properties([
        "version": project.version,
        "mc_version": project.minecraft_version
    ])
    filesMatching("fabric.mod.json") {
        expand "version": project.version, "mc_version": project.minecraft_version
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release = 21
    options.compilerArgs += ["-Xlint:deprecation", "-Xlint:unchecked"]
}
